<Project>
  <!-- 
    This file applies to projects when it gets imported explicitly using the line below:

    <Import Project="$(MSBuildProjectDirectory)\..\Directory.Build.shared.explicit.props" Condition="Exists('$(MSBuildProjectDirectory)\..\Directory.Build.shared.explicit.props')" />
  -->

  <!-- Explicit additional project properties that require stuff set before -->
  <PropertyGroup>
    <!-- 
      Note that this can either be used to:

      1. Resolve project references (but with properties of the *resolving* project)
      2. Determine the output directory of the current project

      In rare cases, need to be able to use the MSBuildProjectName. This allows us 
      to use the same assembly name for different versions, e.g.:
      
      Orc.EntityFramework5 => Orc.EntityFramework.dll
      Orc.EntityFramework6 => Orc.EntityFramework.dll
      
      If we would use AssemblyName, they would be compiled into the same directory

      To enable this feature, use:

      <OutputTargetAssemblyDirectory>Orc.EntityFramework5</OutputTargetAssemblyDirectory>
    -->
    <OverridableOutputRootPath>$(ProjectDir)..\..\output\$(Configuration)</OverridableOutputRootPath>

    <!-- 
        Use correct overridable output path. Since it could already be set by
        projects referencing this project, we always need to set the output root path.

        If the specific property is set, we then update it once again to its final version.
     -->
    <__OverridableOutputPathDefault>$(OverridableOutputRootPath)\$(MSBuildProjectName)\</__OverridableOutputPathDefault>
    <OverridableOutputPath>$(OverridableOutputRootPath)\$(MSBuildProjectName)\</OverridableOutputPath>
    <OverridableOutputPath Condition=" '$(OutputTargetAssemblyDirectory)' != '' ">$(OverridableOutputRootPath)\$(OutputTargetAssemblyDirectory)\</OverridableOutputPath>

    <!-- 
        Overridable output path can be set for a project, but directly referenced projects need a way 
        to use this correctly. Therefore this property checks whether it's explicitly set and already
        contains the correct paths. If not, it will automatically be appended.
		
		Also make sure to not use this when in in Docker and Debug
    -->

    <OutputPath Condition=" ('$(DockerDefaultTargetOS)' == '' OR '$(Configuration)'!='Debug') AND ('$(OverridableOutputPath)' != '$(__OverridableOutputPathDefault)') ">$(OverridableOutputPath)\..\$(MSBuildProjectName)\</OutputPath>
    <OutputPath Condition=" ('$(DockerDefaultTargetOS)' == '' OR '$(Configuration)'!='Debug') AND ('$(OverridableOutputPath)' == '$(__OverridableOutputPathDefault)') ">$(OverridableOutputPath)</OutputPath>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  
  <!-- Disable Fody warnings as errors because of ObsoleteEx, etc breaking the code to an unrepairable state -->
  <PropertyGroup>
    <FodyTreatWarningsAsErrors>false</FodyTreatWarningsAsErrors>
  </PropertyGroup>
  
  <!-- 
    Fix for .NET Core 3.0, see https://github.com/dotnet/core-sdk/issues/192, it 
    uses obj/release instead of [outputdirectory] 
  -->
  <PropertyGroup Condition=" '$(DotNetPackIntermediateOutputPath)' != '' ">
    <IntermediateOutputPath>$(DotNetPackIntermediateOutputPath)</IntermediateOutputPath>
  </PropertyGroup>

  <!-- Fix for MVC analyzers -->
  <PropertyGroup>
    <WarningsNotAsErrors>CS8034;$(WarningsNotAsErrors)</WarningsNotAsErrors>
  </PropertyGroup>

  <!-- Workaround for pdb files for non-core platforms, see https://github.com/dotnet/sdk/issues/1458, 
       but don't apply to UWP apps, see https://github.com/GeertvanHorrik/UwpResourcesIssue -->
  <Choose>
    <When Condition=" '$(TargetPlatformIdentifier)' != 'UAP' ">
      <!--<Target>
        <Message Importance="High" Text="Target platform identifier is '$(TargetPlatformIdentifier)', applying pdb fix" />
      </Target>-->
      <ItemGroup>
        <PackageReference Include="SourceLink.Copy.PdbFiles" Version="2.8.3" PrivateAssets="All" />
      </ItemGroup>
    </When>
    <Otherwise>
      <!--<Target>
        <Message Importance="High" Text="Target platform identifier is '$(TargetPlatformIdentifier)', not applying pdb fix" />
      </Target>-->
    </Otherwise>
  </Choose>
  
  <!-- NuGet updates -->
  <PropertyGroup>
    <Title Condition=" '$(Title)' == '' ">$(PackageId)</Title>
  </PropertyGroup>

  <PropertyGroup Condition="Exists('$(MSBuildProjectDirectory)\..\..\design\Package\icon.png')">
    <PackageIcon>icon.png</PackageIcon>
  </PropertyGroup>

  <ItemGroup Condition="Exists('$(MSBuildProjectDirectory)\..\..\design\Package\icon.png')">
    <None Include="$(MSBuildProjectDirectory)\..\..\design\Package\icon.png" Pack="true" PackagePath="\" />
  </ItemGroup>

  <!-- This will include LICENSE.txt and VERIFICATION.txt for Chocolatey -->
  <ItemGroup>
    <None Include="$(OverridableOutputPath)\LICENSE.txt"
          Condition="Exists('$(OverridableOutputPath)\LICENSE.txt')">
      <Pack>true</Pack>
      <PackagePath>tools</PackagePath>
    </None>

    <None Include="$(OverridableOutputPath)\VERIFICATION.txt"
          Condition="Exists('$(OverridableOutputPath)\VERIFICATION.txt')">
      <Pack>true</Pack>
      <PackagePath>tools</PackagePath>
    </None>
  </ItemGroup>

  <!-- T4 templating -->
  <ItemGroup>
    <None Update="**\*.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
  </ItemGroup>

  <!-- Platform specific stuff -->
  <ItemGroup>
    <Compile Remove="Platforms\**\*.cs;Resources\**\*.cs" />
    <Page Remove="Platforms\**\*.xaml" />
    <!-- This is here so that the conditionally included files below are all visible in VS -->
    <None Include="Platforms\**\*.*" />
    <None Include="Resources\**\*.*" Exclude="Resources\**\*.xaml" />
    <EmbeddedResource Include="Resources\Files\**\*.*">
        <WithCulture>false</WithCulture>
    </EmbeddedResource>
    <Resource Include="Resources\Fonts\**\*.ttf" />
    <Resource Include="Resources\Icons\**\*.ico" />
    <Resource Include="Resources\Images\**\*.png" />
    <Resource Include="Resources\Images\**\*.gif" />
    <Resource Include="Resources\Images\**\*.jpg" />
    <Resource Include="Resources\Images\**\*.jpeg" />
    <Resource Include="Resources\Lottie\**\*.json" />
    <Resource Include="Resources\Videos\**\*.mp4" />
    <Resource Include="Resources\Videos\**\*.wav" />
    <EmbeddedResource Include="Resources\ThirdPartyNotices\**\*" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.*.resx">
      <Generator />
    </EmbeddedResource>

    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>

    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <!-- .NET Core app 2.1 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'netcoreapp2.1' ">
    <DefineConstants>$(DefineConstants);NETCORE;NETCORE2_1;NETCOREAPP;NETCOREAPP2_1</DefineConstants>
  </PropertyGroup>
  
  <!-- .NET Core app 3.0 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'netcoreapp3.0' ">
    <DefineConstants>$(DefineConstants);NETCORE;NETCORE3_0;NETCOREAPP;NETCOREAPP3_0</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'netcoreapp3.0' ">
    <None Remove="Platforms\net\**\*.cs;Platforms\net\**\*.xaml;Platforms\net\**\*.xaml.cs" />
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>
    
  <!-- .NET Core app 3.1 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'netcoreapp3.1' ">
    <DefineConstants>$(DefineConstants);NETCORE;NETCORE3_0;NETCOREAPP;NETCOREAPP3_0</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'netcoreapp3.1' ">
    <None Remove="Platforms\net\**\*.cs;Platforms\net\**\*.xaml;Platforms\net\**\*.xaml.cs" />
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>
  
  <!-- .NET 5.0 -->
  <PropertyGroup Condition=" $(TargetFramework.StartsWith('net5.0')) ">
    <DefineConstants>$(DefineConstants);NETCORE;NETCORE5;NETCORE5_0;NET5;NET5_0</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" $(TargetFramework.StartsWith('net5.0')) ">
    <None Remove="Platforms\net\**\*.cs;Platforms\net\**\*.xaml;Platforms\net\**\*.xaml.cs" />
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>
  
  <!-- .NET 6.0 -->
  <PropertyGroup Condition=" $(TargetFramework.StartsWith('net6.0')) ">
    <DefineConstants>$(DefineConstants);NETCORE;NETCORE6;NETCORE6_0;NET6;NET6_0</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" $(TargetFramework.StartsWith('net6.0')) ">
    <None Remove="Platforms\net\**\*.cs;Platforms\net\**\*.xaml;Platforms\net\**\*.xaml.cs" />
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>
  
  <!-- .NET 7.0 -->
  <PropertyGroup Condition=" $(TargetFramework.StartsWith('net7.0')) ">
    <DefineConstants>$(DefineConstants);NETCORE;NETCORE7;NETCORE7_0;NET7;NET7_0</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" $(TargetFramework.StartsWith('net7.0')) ">
    <None Remove="Platforms\net\**\*.cs;Platforms\net\**\*.xaml;Platforms\net\**\*.xaml.cs" />
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>
  
  <!-- .NET 8.0 -->
  <PropertyGroup Condition=" $(TargetFramework.StartsWith('net8.0')) ">
    <DefineConstants>$(DefineConstants);NETCORE;NETCORE8;NETCORE8_0;NET8;NET8_0</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" $(TargetFramework.StartsWith('net8.0')) ">
    <None Remove="Platforms\net\**\*.cs;Platforms\net\**\*.xaml;Platforms\net\**\*.xaml.cs" />
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>
  
  <!-- .NET 9.0 -->
  <PropertyGroup Condition=" $(TargetFramework.StartsWith('net9.0')) ">
    <DefineConstants>$(DefineConstants);NETCORE;NETCORE9;NETCORE9_0;NET9;NET9_0</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" $(TargetFramework.StartsWith('net9.0')) ">
    <None Remove="Platforms\net\**\*.cs;Platforms\net\**\*.xaml;Platforms\net\**\*.xaml.cs" />
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>
  
  <!-- .NET 10.0 -->
  <PropertyGroup Condition=" $(TargetFramework.StartsWith('net10.0')) ">
    <DefineConstants>$(DefineConstants);NETCORE;NETCORE10;NETCORE10_0;NET10;NET10_0</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" $(TargetFramework.StartsWith('net10.0')) ">
    <None Remove="Platforms\net\**\*.cs;Platforms\net\**\*.xaml;Platforms\net\**\*.xaml.cs" />
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>

  <!-- .NET Standard 2.0 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
    <DefineConstants>$(DefineConstants);NETSTANDARD;NETSTANDARD2_0;NS;NS20</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
    <None Remove="Platforms\netstandard2.0\**\*.cs;Platforms\netstandard2.0\**\*.xaml;Platforms\netstandard2.0\**\*.xaml.cs" />
    <Compile Include="Platforms\netstandard2.0\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\netstandard2.0\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\netstandard2.0\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>

  <!-- .NET 4.5 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>
    <DefineConstants>$(DefineConstants);NET;NET45;NET450</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net451' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>
    <DefineConstants>$(DefineConstants);NET;NET45;NET451</DefineConstants>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net452' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>   
    <DefineConstants>$(DefineConstants);NET;NET45;NET452</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' OR '$(TargetFramework)' == 'net451' OR '$(TargetFramework)' == 'net452'">
    <None Remove="Platforms\net\**\*.cs;Platforms\net\**\*.xaml;Platforms\net\**\*.xaml.cs" />
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>

  <!-- .NET 4.6 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net46' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>   
    <DefineConstants>$(DefineConstants);NET;NET46;NET460</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net461' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>   
    <DefineConstants>$(DefineConstants);NET;NET46;NET461</DefineConstants>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net462' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>
    <DefineConstants>$(DefineConstants);NET;NET46;NET462</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net46' OR '$(TargetFramework)' == 'net461' OR '$(TargetFramework)' == 'net462'">
    <None Remove="Platforms\net\**\*.cs;Platforms\net\**\*.xaml;Platforms\net\**\*.xaml.cs" />
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>

  <!-- .NET 4.7 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net47' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>
    <DefineConstants>$(DefineConstants);NET;NET47;NET470</DefineConstants>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net471' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>   
    <DefineConstants>$(DefineConstants);NET;NET47;NET471</DefineConstants>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net472' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>
    <DefineConstants>$(DefineConstants);NET;NET47;NET472</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'net47' OR '$(TargetFramework)' == 'net471' OR '$(TargetFramework)' == 'net472'">
    <None Remove="Platforms\net\**\*.cs;Platforms\net\**\*.xaml;Platforms\net\**\*.xaml.cs" />
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>
  
  <!-- .NET 4.8 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net48' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>
    <DefineConstants>$(DefineConstants);NET;NET48;NET480</DefineConstants>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net481' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>   
    <DefineConstants>$(DefineConstants);NET;NET48;NET481</DefineConstants>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net482' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>
    <DefineConstants>$(DefineConstants);NET;NET48;NET482</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'net48' OR '$(TargetFramework)' == 'net481' OR '$(TargetFramework)' == 'net482'">
    <None Remove="Platforms\net\**\*.cs;Platforms\net\**\*.xaml;Platforms\net\**\*.xaml.cs" />
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>
  
  <!-- UAP 10.0 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'uap10.0' ">
    <EnableDefaultXamlItems>true</EnableDefaultXamlItems>
    <DefineConstants>$(DefineConstants);UAP;UAP_DEFAULT;NETFX_CORE;UWP;WINDOWS_UWP</DefineConstants>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(TargetFramework)' == 'uap10.0.16299' ">
    <EnableDefaultXamlItems>true</EnableDefaultXamlItems>
    <DefineConstants>$(DefineConstants);UAP;UAP_16299;NETFX_CORE;UWP;WINDOWS_UWP</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'uap10.0' OR '$(TargetFramework)' == 'uap10.0.16299' ">
    <None Remove="Platforms\uap10.0\**\*.cs;Platforms\uap10.0\**\*.xaml;Platforms\uap10.0\**\*.xaml.cs" />
    <Compile Include="Platforms\uap10.0\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\uap10.0\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\uap10.0\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>

  <!-- Xamarin.iOS -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'xamarin.ios10' ">
    <DefineConstants>$(DefineConstants);XAMARIN;IOS</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'xamarin.ios10' ">
    <None Remove="Platforms\xamarin.ios\**\*.cs;Platforms\xamarin.ios\**\*.xaml;Platforms\xamarin.ios\**\*.xaml.cs" />
    <Compile Include="Platforms\xamarin.ios\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\xamarin.ios\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\xamarin.ios\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>

  <!-- Xamarin.Android -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'monoandroid70' ">
    <DefineConstants>$(DefineConstants);XAMARIN;ANDROID</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'monoandroid70' ">
    <None Remove="Platforms\xamarin.android\**\*.cs;Platforms\xamarin.android\**\*.xaml;Platforms\xamarin.android\**\*.xaml.cs" />
    <Compile Include="Platforms\xamarin.android\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\xamarin.android\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\xamarin.ioandroid\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>
  
  <!-- WIX toolset fix, see https://github.com/wixtoolset/issues/issues/5705 -->
  <PropertyGroup Condition=" '$(_InstallerTargetFramework)' == '' ">
    <_InstallerTargetFramework>net48</_InstallerTargetFramework>
  </PropertyGroup>
  
  <Target Name="GetTargetPath" Returns="@(_FakeOutputPath)">
    <ItemGroup Condition="'$(OutputType)' == 'Library'">
      <_FakeOutputPath Include="..\$(OutputPath)\$(_InstallerTargetFramework)\$(AssemblyName).dll" />
    </ItemGroup>
    <ItemGroup Condition="'$(OutputType)' == 'Exe'">
      <_FakeOutputPath Include="..\$(OutputPath)\$(_InstallerTargetFramework)\$(AssemblyName).exe" />
    </ItemGroup>
    <ItemGroup Condition="'$(OutputType)' == 'WinExe'">
      <_FakeOutputPath Include="..\$(OutputPath)\$(_InstallerTargetFramework)\$(AssemblyName).exe" />
    </ItemGroup>
  </Target>
</Project>